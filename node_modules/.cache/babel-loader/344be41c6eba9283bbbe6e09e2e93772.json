{"ast":null,"code":"var _jsxFileName = \"/Users/ashwininagaraj/Github Mock/explore-github/src/container/SearchRepo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { getUserInfo, getUserRepositoriesInitial, getUserStarredRepos, getUserRepositoriesNextPage, getAllRepositories } from \"../component/apis/api\";\nimport Navbar from \"../component/nav-bar/Navbar\";\nimport NavItems from \"../component/nav-items/NavItems\";\nimport UserProfile from \"../component/user-profile/UserProfile\";\nimport ListRepositories from \"../component/repositories/ListRepositories\";\nimport Loading from \"../component/loading/Loading\";\nimport \"./container.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ErrorScreen = () => {\n  const errorImg = \"https://www.pngitem.com/pimgs/m/255-2550411_404-error-images-free-png-transparent-png.png\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"wrapper-div\",\n    className: \"error-page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      \"data-testid\": \"err-img\",\n      className: \"error-img\",\n      alt: \"#\",\n      src: errorImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": \"redirect\",\n      className: \"try-again-text\",\n      onClick: () => {\n        window.location.href = \"/\";\n      },\n      children: \"Try Again?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ErrorScreen;\n\nfunction SearchRepo(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [user, setUser] = useState();\n  const [error, setError] = useState(false);\n  const [repositories, setRepositories] = useState([]);\n  const [initalRepositories, setRepositoriesInital] = useState([]);\n  const [starredRepositories, setstarredRepositories] = useState([]);\n  const [allRepositories, setAllRepositories] = useState([]);\n  const userNameParams = match.params.userName;\n\n  const respoSearch = searchValue => {\n    const searchArray = allRepositories === null || allRepositories === void 0 ? void 0 : allRepositories.filter(obj => obj.name.toLowerCase().includes(searchValue.toLowerCase()));\n    setRepositories(searchArray);\n  };\n\n  const onChangeCallback = value => {\n    if (value.length === 0) {\n      setRepositories(initalRepositories);\n    }\n  };\n\n  useEffect(page => {\n    fetchUser();\n    fetchRepositories();\n    fetchUserStarredRepositories();\n    handlePageClick(page);\n    fetchAllRepositories();\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  async function fetchUser() {\n    try {\n      const {\n        data\n      } = await getUserInfo(userNameParams);\n      setUser(data);\n    } catch (e) {\n      setError(true);\n    }\n  }\n\n  async function fetchRepositories() {\n    try {\n      const {\n        data\n      } = await getUserRepositoriesInitial(userNameParams);\n      setRepositories(data);\n      setRepositoriesInital(data);\n    } catch (e) {\n      setError(true);\n    }\n  }\n\n  async function fetchUserStarredRepositories() {\n    const {\n      data\n    } = await getUserStarredRepos(userNameParams);\n    setstarredRepositories(data);\n  }\n\n  async function fetchAllRepositories() {\n    const {\n      data\n    } = await getAllRepositories(userNameParams);\n    setAllRepositories(data);\n  }\n\n  async function handlePageClick(page) {\n    let currentPage = page.selected + 1;\n    const {\n      data\n    } = await getUserRepositoriesNextPage(userNameParams, currentPage);\n    setRepositories(data);\n    setRepositoriesInital(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        \"data-testid\": \"nav-bar\",\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"conatiner\",\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"left\",\n          children: /*#__PURE__*/_jsxDEV(UserProfile, {\n            \"data-testid\": \"userProfile\",\n            user: user,\n            starredRepositories: starredRepositories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(NavItems, {\n            \"data-testid\": \"nav-items\",\n            user: user,\n            repoSearchCallback: respoSearch,\n            onChangeCallback: onChangeCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListRepositories, {\n            \"data-testid\": \"list-repos\",\n            repos: repositories,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), user.public_repos > 6 && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            \"data-testid\": \"paginate\",\n            user: user,\n            previousLabel: \"previous\",\n            nextLabel: \"next\",\n            breakLabel: \"...\",\n            pageCount: Math.ceil(user.public_repos / 10),\n            marginPagesDisplayed: 2,\n            pageRangeDisplayed: 3,\n            onPageChange: handlePageClick,\n            containerClassName: \"pagination justify-content-center\",\n            pageClassName: \"page-item\",\n            pageLinkClassName: \"page-link\",\n            previousClassName: \"page-item\",\n            previousLinkClassName: \"page-link\",\n            nextClassName: \"page-item\",\n            nextLinkClassName: \"page-link\",\n            breakClassName: \"page-item\",\n            breakLinkClassName: \"page-link\",\n            activeClassName: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: error ? /*#__PURE__*/_jsxDEV(ErrorScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 38\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(SearchRepo, \"Ht6Y8LbCT6gEMFow35+5o5ucw/c=\");\n\n_c2 = SearchRepo;\nexport default SearchRepo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorScreen\");\n$RefreshReg$(_c2, \"SearchRepo\");","map":{"version":3,"sources":["/Users/ashwininagaraj/Github Mock/explore-github/src/container/SearchRepo.js"],"names":["React","useState","useEffect","ReactPaginate","getUserInfo","getUserRepositoriesInitial","getUserStarredRepos","getUserRepositoriesNextPage","getAllRepositories","Navbar","NavItems","UserProfile","ListRepositories","Loading","ErrorScreen","errorImg","window","location","href","SearchRepo","match","user","setUser","error","setError","repositories","setRepositories","initalRepositories","setRepositoriesInital","starredRepositories","setstarredRepositories","allRepositories","setAllRepositories","userNameParams","params","userName","respoSearch","searchValue","searchArray","filter","obj","name","toLowerCase","includes","onChangeCallback","value","length","page","fetchUser","fetchRepositories","fetchUserStarredRepositories","handlePageClick","fetchAllRepositories","data","e","currentPage","selected","public_repos","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  getUserInfo,\n  getUserRepositoriesInitial,\n  getUserStarredRepos,\n  getUserRepositoriesNextPage,\n  getAllRepositories,\n} from \"../component/apis/api\";\n\n\nimport Navbar from \"../component/nav-bar/Navbar\";\nimport NavItems from \"../component/nav-items/NavItems\";\nimport UserProfile from \"../component/user-profile/UserProfile\";\nimport ListRepositories from \"../component/repositories/ListRepositories\";\nimport Loading from \"../component/loading/Loading\";\nimport \"./container.css\";\n\nconst ErrorScreen = () => {\n  const errorImg =\n    \"https://www.pngitem.com/pimgs/m/255-2550411_404-error-images-free-png-transparent-png.png\";\n  return (\n    <div data-testid=\"wrapper-div\" className=\"error-page-wrapper\">\n      <img data-testid=\"err-img\" className=\"error-img\" alt=\"#\" src={errorImg} />\n      <span\n        data-testid=\"redirect\"\n        className=\"try-again-text\"\n        onClick={() => {\n          window.location.href = \"/\";\n        }}\n      >\n        Try Again?\n      </span>\n    </div>\n  );\n};\n\nfunction SearchRepo({ match }) {\n  const [user, setUser] = useState();\n  const [error, setError] = useState(false);\n  const [repositories, setRepositories] = useState([]);\n  const [initalRepositories, setRepositoriesInital] = useState([]);\n  const [starredRepositories, setstarredRepositories] = useState([]);\n  const [allRepositories, setAllRepositories] = useState([]);\n\n  const userNameParams = match.params.userName;\n\n  const respoSearch = (searchValue) => {\n    const searchArray = allRepositories?.filter((obj) =>\n      obj.name.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    setRepositories(searchArray);\n  };\n\n  const onChangeCallback = (value) => {\n    if (value.length === 0) {\n      setRepositories(initalRepositories);\n    }\n  };\n\n  useEffect((page) => {\n    fetchUser();\n    fetchRepositories();\n    fetchUserStarredRepositories();\n    handlePageClick(page);\n    fetchAllRepositories();\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  async function fetchUser() {\n    try {\n      const { data } = await getUserInfo(userNameParams);\n      setUser(data);\n    } catch (e) {\n      setError(true);\n    }\n  }\n  async function fetchRepositories() {\n    try {\n      const { data } = await getUserRepositoriesInitial(userNameParams);\n      setRepositories(data);\n      setRepositoriesInital(data);\n    } catch (e) {\n      setError(true);\n    }\n  }\n  async function fetchUserStarredRepositories() {\n    const { data } = await getUserStarredRepos(userNameParams);\n    setstarredRepositories(data);\n  }\n\n  async function fetchAllRepositories() {\n    const { data } = await getAllRepositories(userNameParams);\n    setAllRepositories(data);\n  }\n\n  async function handlePageClick(page) {\n    let currentPage = page.selected + 1;\n    const { data } = await getUserRepositoriesNextPage(\n      userNameParams,\n      currentPage\n    );\n    setRepositories(data);\n    setRepositoriesInital(data);\n  }\n\n  return (\n    <>\n      {user ? (\n        <>\n          <Navbar data-testid=\"nav-bar\" user={user} />\n          <div data-testid=\"conatiner\" className=\"container\">\n            <div class=\"left\">\n              <UserProfile\n                data-testid=\"userProfile\"\n                user={user}\n                starredRepositories={starredRepositories}\n              />\n            </div>\n            <div class=\"right\">\n              <NavItems\n                data-testid=\"nav-items\"\n                user={user}\n                repoSearchCallback={respoSearch}\n                onChangeCallback={onChangeCallback}\n              />\n              <ListRepositories data-testid=\"list-repos\" repos={repositories} user={user} />\n              {user.public_repos > 6 && (\n                <ReactPaginate\n                  data-testid=\"paginate\"\n                  user={user}\n                  previousLabel={\"previous\"}\n                  nextLabel={\"next\"}\n                  breakLabel={\"...\"}\n                  pageCount={Math.ceil(user.public_repos / 10)}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={3}\n                  onPageChange={handlePageClick}\n                  containerClassName={\"pagination justify-content-center\"}\n                  pageClassName={\"page-item\"}\n                  pageLinkClassName={\"page-link\"}\n                  previousClassName={\"page-item\"}\n                  previousLinkClassName={\"page-link\"}\n                  nextClassName={\"page-item\"}\n                  nextLinkClassName={\"page-link\"}\n                  breakClassName={\"page-item\"}\n                  breakLinkClassName={\"page-link\"}\n                  activeClassName={\"active\"}\n                />\n              )}\n            </div>\n          </div>\n        </>\n      ) : (\n        <>{error ? <ErrorScreen /> : <Loading />}</>\n      )}\n    </>\n  );\n}\n\nexport default SearchRepo;\n"]},"metadata":{},"sourceType":"module"}